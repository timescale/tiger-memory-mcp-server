import { Client } from 'pg';

const schema = process.env.DB_SCHEMA || 'tiger_memory';

export const description = 'Create schema and memory table';

export async function up() {
  const client = new Client();

  try {
    await client.connect();
    await client.query('BEGIN');
    await client.query(/* sql */ `
      CREATE TABLE ${schema}.memory
      ( id int8 NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
      , key TEXT NOT NULL
      , content TEXT NOT NULL
      , created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
      , updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
      , deleted_at TIMESTAMPTZ DEFAULT NULL
      );

      CREATE INDEX idx_memory_key
        ON ${schema}.memory (key)
        WHERE deleted_at IS NULL;
      `);
    await client.query('COMMIT');
  } catch (e) {
    await client.query('ROLLBACK');
    throw e;
  } finally {
    await client.end();
  }
}

export async function down() {
  const client = new Client();

  try {
    await client.connect();
    await client.query(/* sql */ `
      DROP INDEX IF EXISTS ${schema}.idx_memory_key;
      DROP TABLE IF EXISTS ${schema}.memory
      `);
  } finally {
    await client.end();
  }
}
